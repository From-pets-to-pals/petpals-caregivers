trigger:
- main

name: caregivers-$(Build.BuildId)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: PackageAndBuild
    steps:
    - checkout: self
      persistCredentials: true
    - task: CmdLine@2
      inputs:
        script: |
          git clone https://$(GIT_USER):$(PAT)@github.com/From-pets-to-pals/petpals-common.git
          git clone https://$(GIT_USER):$(PAT)@github.com/From-pets-to-pals/petpals-conf.git
          ls
          cp -r petpals-conf/dev/caregivers/resources petpals-caregivers/src/main
          ls petpals-caregivers/src/main/resources
    - task: CmdLine@2
      inputs:
        script: 'wget https://archive.apache.org/dist/maven/maven-3/3.9.6/binaries/apache-maven-3.9.6-bin.zip'
    - task: ExtractFiles@1
      inputs:
        archiveFilePatterns: 'apache-maven-3.9.6-bin.zip'
        destinationFolder: '$(Build.SourcesDirectory)/maven'
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'petpals-apps'
        scannerMode: 'Other'
        extraProperties: |
          sonar.organization=from-pets-to-pals
          sonar.project.key=From-pets-to-pals_petpals-caregiver
    - task: Maven@4
      displayName: Clean Package petpals-common 
      inputs:
        mavenPomFile: '$(Build.SourcesDirectory)/petpals-common/petpals-common/pom.xml'
        goals: 'clean install'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Path'
        mavenDirectory: '$(Build.SourcesDirectory)/maven/apache-maven-3.9.6'
        mavenSetM2Home: true
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Maven@4
      displayName: Clean Verify petpals-caregivers 
      inputs:
        mavenPomFile: '$(Build.SourcesDirectory)/$(APP_NAME)/pom.xml'
        goals: 'clean verify'
        options: '-DSECRET=$(SECRET) -DTENANT-ID=$(TENANT-ID) -DCLIENT-ID=$(CLIENT-ID) -DVAULT=$(VAULT)'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Path'
        mavenDirectory: '$(Build.SourcesDirectory)/maven/apache-maven-3.9.6'
        mavenSetM2Home: false
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: true
        sqMavenPluginVersionChoice: 'latest'
    - task: PublishCodeCoverageResults@2
      inputs:
        summaryFileLocation: '$(Build.SourcesDirectory)/$(APP_NAME)/target/jacoco-report/jacoco.xml'
        failIfCoverageEmpty: true
    - task: SonarQubePublish@5
      inputs:
        pollingTimeoutSec: '500'
  
    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/$(APP_NAME)/target'
        Contents: '$(APP_NAME)-runner.jar'
        TargetFolder: $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: '$(APP_NAME)'
        publishLocation: 'Container'